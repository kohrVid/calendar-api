swagger: '2.0'
info:
  version: 1.0.0
  title: Calendar API
  description: API to keep track of appointments in an interview calendar
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: Jessica Ete
    email: kohrVid@zoho.com
    url: 'https://www.kohrvid.com'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
host: candidatestore.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      description: Root path
      operationId: GET /
      responses:
        '200':
          description: Calendar API root path response
          examples:
            text/html: Calendar API
  /health:
    get:
      description: Health check for the application
      operationId: GET /health
      responses:
        '200':
          description: Health check response
          examples:
            text/html: OK
  /candidates:
    get:
      description: Get a list of all candidates in the database
      operationId: GET /candidates
      responses:
        '200':
          description: Candidates response
          schema:
            type: array
            items:
              $ref: '#/definitions/Candidate'
        default:
          description: Unexpected error
          examples:
            application/json: []
    post:
      description: Creates a new candidate. Duplicates are not allowed
      operationId: POST /candidates
      parameters:
        - name: candidates
          in: body
          description: Candidate to add to the database
          required: true
          schema:
            $ref: '#/definitions/NewCandidate'
      responses:
        '201':
          description: Candidate response
          schema:
            $ref: '#/definitions/Candidate'
        '304':
          description: Candidate already exists
          examples:
            text/html: Candidate already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorCandidate'
  '/candidates/:id':
    get:
      description: returns a candidate based on the ID supplied
      operationId: 'GET /candidates/:id'
      parameters:
        - name: id
          in: path
          description: ID of candidate to find
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Candidate response
          schema:
            $ref: '#/definitions/Candidate'
        '404':
          description: Candidate not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorCandidate'
    patch:
      description: Updates a candidate based on the ID and parameters supplied
      operationId: 'PATCH /candidates/:id'
      parameters:
        - name: id
          in: path
          description: ID of candidate to edit
          required: true
          type: integer
          format: int64
        - name: candidates
          in: body
          description: Candidate parameters to update
          schema:
            $ref: '#/definitions/EditCandidate'
      responses:
        '200':
          description: Candidate response
          schema:
            $ref: '#/definitions/Candidate'
        '404':
          description: Candidate not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorCandidate'
    delete:
      description: Deletes a single candidate based on the ID supplied
      operationId: 'DELETE /candidates/:id'
      parameters:
        - name: id
          in: path
          description: ID of candidate to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Candidate deleted
          examples:
            text/html: 'Candidate #1 deleted'
        '404':
          description: Candidate not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorCandidate'
  '/candidates/:candidate_id/availability':
    get:
      description: Get a list of all candidates in the database
      operationId: 'GET /candidates/:candidate_id/availability'
      parameters:
        - name: candidate_id
          in: path
          description: ID of the candidate in question
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Candidate availability response
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
        default:
          description: Unexpected error
          examples:
            application/json: []
    post:
      description: >-
        Creates a new time slot for a given candidate. Duplicates are not
        allowed
      operationId: 'POST /candidates/:candidate_id/availability'
      parameters:
        - name: candidate_id
          in: path
          description: ID of the candidate in question
          required: true
          type: integer
          format: int64
        - name: availability
          in: body
          description: Time slot to add to the database
          required: true
          schema:
            $ref: '#/definitions/NewTimeSlot'
      responses:
        '201':
          description: Candidate availability response
          schema:
            $ref: '#/definitions/TimeSlot'
        '304':
          description: Time slot already exists
          examples:
            text/html: Time slot already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
  '/candidates/:candidate_id/availability/:id':
    get:
      description: returns a timeslot for a given candidate based on the IDs supplied
      operationId: 'GET /candidates/:candidate_id/availability/:id'
      parameters:
        - name: candidate_id
          in: path
          description: ID of the candidate in question
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of the time slot in question
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Candidate availability response
          schema:
            $ref: '#/definitions/TimeSlot'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
    patch:
      description: Updates a candidate based on the ID and parameters supplied
      operationId: 'PATCH /candidates/:candidate_id/availability/:id'
      parameters:
        - name: candidate_id
          in: path
          description: ID of the candidate in question
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of the time slot in question
          required: true
          type: integer
          format: int64
        - name: time_slot
          in: body
          description: Time slot parameters to update
          schema:
            $ref: '#/definitions/EditTimeSlot'
      responses:
        '200':
          description: Candidate availability response
          schema:
            $ref: '#/definitions/TimeSlot'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
    delete:
      description: >-
        Deletes a single time slot based on the candidate ID and time slot ID
        provided
      operationId: 'DELETE /candidates/:candidate_id/availability/:id'
      parameters:
        - name: candidate_id
          in: path
          description: ID of the candidate in question
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of the time slot to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Time slot deleted
          examples:
            text/html: 'TimeSlot #1 deleted'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
  /interviewers:
    get:
      description: Get a list of all interviewers in the database
      operationId: GET /interviewers
      responses:
        '200':
          description: Interviewers response
          schema:
            type: array
            items:
              $ref: '#/definitions/Interviewer'
        default:
          description: Unexpected error
          examples:
            application/json: []
    post:
      description: Creates a new interviewer. Duplicates are not allowed
      operationId: POST /interviewers
      parameters:
        - name: interviewers
          in: body
          description: Interviewer to add to the database
          required: true
          schema:
            $ref: '#/definitions/NewInterviewer'
      responses:
        '201':
          description: Interviewer response
          schema:
            $ref: '#/definitions/Interviewer'
        '304':
          description: Interviewer already exists
          examples:
            text/html: Interviewer already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorInterviewer'
  '/interviewers/:id':
    get:
      description: returns a interviewer based on the ID supplied
      operationId: 'GET /interviewers/:id'
      parameters:
        - name: id
          in: path
          description: ID of interviewer to find
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Interviewer response
          schema:
            $ref: '#/definitions/Interviewer'
        '404':
          description: Interviewer not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorInterviewer'
    patch:
      description: Updates a interviewer based on the ID and parameters supplied
      operationId: 'PATCH /interviewers/:id'
      parameters:
        - name: id
          in: path
          description: ID of interviewer to edit
          required: true
          type: integer
          format: int64
        - name: interviewers
          in: body
          description: Interviewer parameters to update
          schema:
            $ref: '#/definitions/EditInterviewer'
      responses:
        '200':
          description: Interviewer response
          schema:
            $ref: '#/definitions/Interviewer'
        '404':
          description: Interviewer not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorInterviewer'
    delete:
      description: Deletes a single interviewer based on the ID supplied
      operationId: 'DELETE /interviewers/:id'
      parameters:
        - name: id
          in: path
          description: ID of interviewer to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Interviewer deleted
          examples:
            text/html: 'Interviewer #1 deleted'
        '404':
          description: Interviewer not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorInterviewer'
  '/interviewers/:interviewer_id/availability':
    get:
      description: Get a list of all interviewers in the database
      operationId: 'GET /interviewers/:interviewer_id/availability'
      parameters:
        - name: interviewer_id
          in: path
          description: ID of the interviewer in question
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Interviewer availability response
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
        default:
          description: Unexpected error
          examples:
            application/json: []
    post:
      description: >-
        Creates a new time slot for a given interviewer. Duplicates are not
        allowed
      operationId: 'POST /interviewers/:interviewer_id/availability'
      parameters:
        - name: interviewer_id
          in: path
          description: ID of the interviewer in question
          required: true
          type: integer
          format: int64
        - name: availability
          in: body
          description: Time slot to add to the database
          required: true
          schema:
            $ref: '#/definitions/NewTimeSlot'
      responses:
        '201':
          description: Interviewer availability response
          schema:
            $ref: '#/definitions/TimeSlot'
        '304':
          description: Time slot already exists
          examples:
            text/html: Time slot already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
  '/interviewers/:interviewer_id/availability/:id':
    get:
      description: returns a timeslot for a given interviewer based on the IDs supplied
      operationId: 'GET /interviewers/:interviewer_id/availability/:id'
      parameters:
        - name: interviewer_id
          in: path
          description: ID of the interviewer in question
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of the time slot in question
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Interviewer availability response
          schema:
            $ref: '#/definitions/TimeSlot'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
    patch:
      description: Updates a interviewer based on the ID and parameters supplied
      operationId: 'PATCH /interviewers/:interviewer_id/availability/:id'
      parameters:
        - name: interviewer_id
          in: path
          description: ID of the interviewer in question
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of the time slot in question
          required: true
          type: integer
          format: int64
        - name: time_slot
          in: body
          description: Time slot parameters to update
          schema:
            $ref: '#/definitions/EditTimeSlot'
      responses:
        '200':
          description: Interviewer availability response
          schema:
            $ref: '#/definitions/TimeSlot'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
    delete:
      description: >-
        Deletes a single time slot based on the interviewer ID and time slot ID
        provided
      operationId: 'DELETE /interviewers/:interviewer_id/availability/:id'
      parameters:
        - name: interviewer_id
          in: path
          description: ID of the interviewer in question
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of the time slot to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Time slot deleted
          examples:
            text/html: 'TimeSlot #1 deleted'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
  /time_slots:
    get:
      description: Get a list of all time slots in the database
      operationId: GET /time_slots
      responses:
        '200':
          description: TimeSlots response
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
        default:
          description: Unexpected error
          examples:
            application/json: []
    post:
      description: Creates a new time slot. Duplicates are not allowed
      operationId: POST /time_slots
      parameters:
        - name: time_slots
          in: body
          description: TimeSlot to add to the database
          required: true
          schema:
            $ref: '#/definitions/NewTimeSlot'
      responses:
        '201':
          description: Time slot response
          schema:
            $ref: '#/definitions/TimeSlot'
        '304':
          description: Time slot already exists
          examples:
            text/html: TimeSlot already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
  '/time_slots/:id':
    get:
      description: Returns a time slot based on the ID supplied
      operationId: 'GET /time_slots/:id'
      parameters:
        - name: id
          in: path
          description: ID of time slot to find
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Time slot response
          schema:
            $ref: '#/definitions/TimeSlot'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
    patch:
      description: Updates a time slot based on the ID and parameters supplied
      operationId: 'PATCH /time_slots/:id'
      parameters:
        - name: id
          in: path
          description: ID of time slot to edit
          required: true
          type: integer
          format: int64
        - name: time_slots
          in: body
          description: TimeSlot parameters to update
          schema:
            $ref: '#/definitions/EditTimeSlot'
      responses:
        '200':
          description: Time slot response
          schema:
            $ref: '#/definitions/TimeSlot'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
    delete:
      description: Deletes a single time slot based on the ID supplied
      operationId: 'DELETE /time_slots/:id'
      parameters:
        - name: id
          in: path
          description: ID of time slot to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Time slot deleted
          examples:
            text/html: 'TimeSlot #1 deleted'
        '404':
          description: Time slot not found
          examples:
            application/json: {}
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorTimeSlot'
definitions:
  Candidate:
    title: Candidate
    description: A candidate for an interview
    type: object
    allOf:
      - $ref: '#/definitions/NewCandidate'
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
  NewCandidate:
    title: New Candidate
    description: A new candidate for an interview
    type: object
    required:
      - first_name
      - last_name
      - email
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  EditCandidate:
    title: Edit Candidate
    description: Edit a candidate's attributes for an interview
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  ErrorCandidate:
    title: ErrorCandidate
    description: The object returned in the event of an error
    type: object
    required:
      - first_name
      - last_name
      - email
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  Interviewer:
    title: Interviewer
    description: A potential interviewer
    type: object
    allOf:
      - $ref: '#/definitions/NewInterviewer'
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
  NewInterviewer:
    title: New Interviewer
    description: A new interviewer
    type: object
    required:
      - first_name
      - last_name
      - email
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  EditInterviewer:
    title: Edit Interviewer
    description: Edit a potential interviewer's attributes
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  ErrorInterviewer:
    title: ErrorInterviewer
    description: The object returned in the event of an error
    type: object
    required:
      - first_name
      - last_name
      - email
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  TimeSlot:
    title: TimeSlot
    description: A time slot for an interview
    type: object
    allOf:
      - $ref: '#/definitions/NewTimeSlot'
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
  NewTimeSlot:
    title: New TimeSlot
    description: A new time slot for an interview
    type: object
    required:
      - date
      - start_time
      - duration
    properties:
      date:
        type: string
      start_time:
        type: integer
        format: int64
      duration:
        type: integer
        format: int64
  EditTimeSlot:
    title: Edit TimeSlot
    description: A edit a time slot's attributes for an interview
    type: object
    properties:
      date:
        type: string
      start_time:
        type: integer
        format: int64
      duration:
        type: integer
        format: int64
  ErrorTimeSlot:
    title: ErrorTimeSlot
    description: The object returned in the event of an error
    type: object
    required:
      - date
      - start_time
      - duration
    properties:
      date:
        type: string
      start_time:
        type: integer
        format: int64
      duration:
        type: integer
        format: int64
